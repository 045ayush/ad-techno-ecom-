datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Address {
  id             Int      @id @default(autoincrement())
  firstName      String
  lastName       String
  streetAddress  String
  city           String
  state          String
  zipCode        String
  mobile         String?
  userId         Int?
  user           User?    @relation(fields: [userId], references: [id])
  orders         Order[]  @relation("ShippingAddress")
}

model Cart {
  id                   Int       @id @default(autoincrement())
  userId               Int       @unique
  user                 User      @relation(fields: [userId], references: [id])
  cartItems            CartItem[]
  totalPrice           Float     @default(0)
  totalItem            Int       @default(0)
  totalDiscountedPrice Float     @default(0)
  discount             Float     @default(0)
}

model CartItem {
  id              Int     @id @default(autoincrement())
  cartId          Int
  cart            Cart    @relation(fields: [cartId], references: [id])
  productId       Int
  product         Product @relation(fields: [productId],references: [id])
  variantId       Int
  variant         Variant @relation(fields: [variantId], references: [id])
  quantity        Int     @default(1)
  price           Float
  discountedPrice Float
}

model Category {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  products   Product[]
}

model Order {
  id                   Int        @id @default(autoincrement())
  userId               Int?
  user                 User?      @relation(fields: [userId], references: [id])
  orderItems           OrderItem[]
  orderDate            DateTime
  deliveryDate         DateTime?
  shippingAddressId    Int?
  shippingAddress      Address?   @relation("ShippingAddress", fields: [shippingAddressId], references: [id])
  paymentDetails       Json
  totalPrice           Float
  totalDiscountedPrice Float
  discount             Float
  orderStatus          String @default("PENDING")
  totalItem            Int
  createdAt            DateTime   @default(now())
}

model OrderItem {
  id             Int      @id @default(autoincrement())
  orderId        Int?
  order          Order ?   @relation(fields: [orderId], references: [id])
  variantId      Int
  variant        Variant  @relation(fields: [variantId], references: [id])
  productId       Int?
  product         Product? @relation(fields: [productId],references: [id])
  quantity       Int
  price          Float
  discountedPrice Float
  deliveryDate   DateTime?
}

model Product {
  id              Int       @id @default(autoincrement())
  title           String?
  description     String?
  categoryId      Int?
  category        Category? @relation(fields: [categoryId], references: [id])
  brand           String?
  color           String?
  highlights      String[]
  createdAt       DateTime  @default(now())
  variants        Variant[]
  ratings         Rating[]
  reviews         Review[]

  CartItem CartItem[]

  OrderItem OrderItem[]
}

model Variant {
  id                Int      @id @default(autoincrement())
  variantName       String
  productId         Int
  product           Product  @relation(fields: [productId], references: [id])
  price             Float
  discountedPrice   Float
  discountPercentage Float
  quantity          Int
  images            String[]
  specifications    Json
  orderItems        OrderItem[]
  cartItems         CartItem[]
}

model Rating {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  productId   Int
  product     Product  @relation(fields: [productId], references: [id])
  rating      Float
  createdAt   DateTime @default(now())
}

model Review {
  id          Int      @id @default(autoincrement())
  review      String
  productId   Int
  product     Product  @relation(fields: [productId], references: [id])
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
}

model User {
  id                Int      @id @default(autoincrement())
  firstName         String
  lastName          String
  password          String
  email             String   @unique
  role              String   @default("CUSTOMER")
  mobile            String?
  addresses         Address[]
  carts             Cart[]
  orders            Order[]
  ratings           Rating[]
  reviews           Review[]
  createdAt         DateTime @default(now())
}
